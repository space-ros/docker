#This code is generated by inputting "Rover goes forward 10m/s during 20 seconds"
#after 'python3 generate_src.py' 

import rclpy
from rclpy.node import Node
from geometry_msgs.msg import Twist
from time import sleep

class RoverController(Node):

    def __init__(self):
        super().__init__('rover_controller')
        self.publisher_ = self.create_publisher(Twist, '/cmd_vel', 10)
        self.timer = self.create_timer(0.1, self.publish_cmd_vel)
        self.start_time = self.get_clock().now()

    def publish_cmd_vel(self):
        current_time = self.get_clock().now()
        elapsed_time = (current_time - self.start_time).nanoseconds / 1e9

        if elapsed_time > 20:
            self.timer.cancel()  # Stop publishing after 20 seconds
            self.get_logger().info('Stopped sending velocity commands.')
            return

        cmd_vel = Twist()
        cmd_vel.linear.x = 10.0  # Forward speed in m/s
        cmd_vel.angular.z = 0.0  # No rotation

        self.publisher_.publish(cmd_vel)
        self.get_logger().info('Publishing: Linear X: %f, Angular Z: %f' %
                               (cmd_vel.linear.x, cmd_vel.angular.z))


def main(args=None):
    rclpy.init(args=args)
    rover_controller = RoverController()
    rclpy.spin(rover_controller)

    rover_controller.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
